<?xml version="1.0" encoding="utf-8"?>
<includes>
    <include name="contents501list">
        <visible>[!Container.Content(episodes) | SubString(Container.FolderPath,videodb://5/)] + !Container.Content(addons)</visible>
        <posx>-69</posx>
        <posy>540</posy>
        <width>2058</width>
        <height>525</height>
        <onleft>501</onleft>
        <onright>501</onright>
        <onup>7000</onup>
        <!-- MikeBZH44 start -->
        <ondown condition="Skin.HasSetting(DVDAutoOpenCase) + Control.IsVisible(61)">61</ondown>
        <ondown condition="Skin.HasSetting(DVDAutoOpenCase) + !Control.IsVisible(61)">109</ondown>
        <ondown condition="!Skin.HasSetting(DVDAutoOpenCase)">961</ondown>
        <!-- MikeBZH44 end -->
        <viewtype label="31028">bigwrap</viewtype>
        <pagecontrol>61</pagecontrol>
        <scrolltime tween="quadratic">300</scrolltime>
        <focusposition>3</focusposition>
        <orientation>horizontal</orientation>
        <preloaditems>2</preloaditems>
        <include>Animation_OpenCloseZoom_New</include>
        <itemlayout height="600" width="294" condition="[[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]] + !Control.IsVisible(6000)">
            <control type="group">
                <animation effect="zoom" start="100" end="90" center="147,345" time="300" reversible="false" tween="cubic" condition="Skin.HasSetting(usecases) + Container.Content(movies)">Conditional</animation>
                <animation effect="fade" time="0" delay="800">Visible</animation>
                <posy>30</posy>
                <include>MovieShowCaseGlow</include>
                <control type="image">
                    <include>MovieShowcaseThumb</include>
                    <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem0Var]</texture>
                    <!-- MikeBZH44 start : No case for movieset -->
                    <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
                    <!-- MikeBZH44 end -->
                </control>
                <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
                <control type="image">
                    <include>MovieShowcaseDVDCoverVars</include>
                    <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem0Var]</texture>
                    <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)]</visible>
                </control>
                <!-- MikeBZH44 end -->
                <!-- Movie Showcase Variables: Thumb glass overlays -->
                <control type="image">
                    <include>MovieShowcaseThumbDimensions</include>
                    <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
                    <!-- MikeBZH44 start : No case for movieset -->
                    <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)]</visible>
                    <!-- MikeBZH44 end -->
                </control>
                <control type="image">
                    <include>MovieShowcaseDVDCoverVars</include>
                    <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[GlobalCaseVar]</texture>
                    <!-- MikeBZH44 start : No case for movieset -->
                    <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)]</visible>
                    <!-- MikeBZH44 end -->
                </control>
                <control type="image">
                    <include>MovieShowcaseThumbReflection</include>
                    <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem0Var]</texture>
                    <!-- MikeBZH44 start : No case for movieset -->
                    <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)]</visible>
                    <!-- MikeBZH44 end -->
                </control>
                <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
                <control type="image">
                    <include>MovieShowcaseThumbReflectionMovieset</include>
                    <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem0Var]</texture>
                    <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)]</visible>
                </control>
                <!-- MikeBZH44 end -->
                <control type="image">
                    <include>MovieShowcaseThumbReflectionDVD</include>
                    <!-- MikeBZH44 start : No case for movieset -->
                    <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)]</visible>
                    <!-- MikeBZH44 end -->
                </control>
                <control type="image">
                    <include>WatchedOverlayShowCase</include>
                    <include>OverlayVisibility0</include>
                    <!-- MikeBZH44 start : No case for movieset -->
                    <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)]</visible>
                    <!-- MikeBZH44 end -->
                </control>
            </control>
        </itemlayout>
        <focusedlayout height="525" width="294" condition="[[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]] + !Control.IsVisible(6000)">
            <control type="group">
                <animation effect="fade" time="0" delay="800">Visible</animation>
                <animation effect="zoom" start="100" end="120" center="147,345" time="300" reversible="false" tween="cubic">Focus</animation>
                <animation effect="zoom" start="100" end="90" center="147,345" time="300" reversible="false" tween="cubic" condition="Skin.HasSetting(usecases) + Container.Content(movies)">Conditional</animation>
                <posy>30</posy>
                <include>MovieShowCaseGlow</include>
                <!-- MikeBZH44 start : Display background case -->
                <!-- Case background -->
                <control type="image">
                    <include>MovieShowcaseDVDCoverVars</include>
                    <texture background="true" fallback="thumbs/boxes/default_case.png">thumbs/boxes/$VAR[ShowcaseCasePathVar]/back_$VAR[GlobalCaseVar]</texture>
					<visible>Skin.HasSetting(usecases) + Container.Content(movies) + ![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)]</visible>
                </control>
                <!-- MikeBZH44 end -->
                <!-- MikeBZH44 start : Display Movie disc / Bluray disc / DVD disc / Default disc -->
                <control type="image">
                    <include>MovieShowcaseCDArtClear</include>
                    <texture background="true" fallback="common/cdart/bd_logo.png">$INFO[ListItem.Art(discart)]</texture>
                    <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)] + [stringcompare(ListItem.VideoResolution,3d) | stringcompare(ListItem.VideoResolution,720) | stringcompare(ListItem.VideoResolution,1080)]</visible>
                </control>
                <control type="image">
                    <include>MovieShowcaseCDArtClear</include>
                    <texture background="true" fallback="common/cdart/dvd_logo.png">$INFO[ListItem.Art(discart)]</texture>
                    <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)] + [stringcompare(ListItem.VideoResolution,480) | stringcompare(ListItem.VideoResolution,540) | stringcompare(ListItem.VideoResolution,576)]</visible>
                </control>
                <control type="image">
                    <include>MovieShowcaseCDArtClear</include>
                    <texture background="true">common/cdart/default.png</texture>
                    <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)] + ![stringcompare(ListItem.VideoResolution,3d) | stringcompare(ListItem.VideoResolution,480) | stringcompare(ListItem.VideoResolution,540) | stringcompare(ListItem.VideoResolution,576) | stringcompare(ListItem.VideoResolution,720) | stringcompare(ListItem.VideoResolution,1080)]</visible>
                </control>
                <!-- MikeBZH44 end -->
                <!-- Movie thumbnail -->
                <control type="image">
                    <include>MovieShowcaseThumb</include>
                    <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem0Var]</texture>
                    <!-- MikeBZH44 start : Open case + No case for movieset -->
                    <include>ShowcaseOpenCaseCoverflow</include>
                    <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
                    <!-- MikeBZH44 end -->
                </control>
                <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
                <control type="image">
                    <include>MovieShowcaseDVDCoverVars</include>
                    <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem0Var]</texture>
                    <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)]</visible>
                    </control>
                <!-- MikeBZH44 end -->
                <!-- Movie Showcase Variables: Thumb glass overlays -->
                <control type="image">
                    <include>MovieShowcaseThumbDimensions</include>
                    <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
                    <include>ShowcaseOpenCaseCoverflow</include>
                    <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)]</visible>
                </control>
                <!-- Front case -->
                <control type="image">
                    <include>MovieShowcaseDVDCoverVars</include>
                    <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[GlobalCaseVar]</texture>
                    <!-- MikeBZH44 start : Open case + No case for movieset -->
                    <include>ShowcaseOpenCaseCoverflow</include>
                    <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)]</visible>
                    <!-- MikeBZH44 end -->
                </control>
                <!-- Movie thumbnail reflection -->
                <control type="image">
                    <include>MovieShowcaseThumbReflectionMain</include>
                    <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem0Var]</texture>
                    <!-- MikeBZH44 start : Open case + No case for movieset -->
                    <include>ShowcaseOpenCaseCoverflow</include>
                    <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)]</visible>
                    <!-- MikeBZH44 end -->
                </control>
                <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
                <control type="image">
                    <include>MovieShowcaseThumbReflectionMovieset</include>
                    <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem0Var]</texture>
                    <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)]</visible>
                </control>
                <!-- MikeBZH44 end -->
                <control type="image">
                    <include>MovieShowcaseThumbReflectionDVD</include>
                    <!-- MikeBZH44 start : Open case + No case for movieset -->
                    <include>ShowcaseOpenCaseCoverflow</include>
                    <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)]</visible>
                    <!-- MikeBZH44 end -->
                </control>
                <control type="image">
                    <include>WatchedOverlayShowCase</include>
                    <include>OverlayVisibility0</include>
                    <!-- MikeBZH44 start : Open case + No case for movieset -->
                    <include>ShowcaseOpenCaseCoverflowWatched</include>
                    <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)]</visible>
                    <!-- MikeBZH44 end -->
                </control>
            </control>
        </focusedlayout>
        <itemlayout height="600" width="100" condition="![[[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]] + !Control.IsVisible(6000)] + !Skin.HasSetting(showcasezoom)"></itemlayout>
        <focusedlayout height="525" width="858" condition="![[[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]] + !Control.IsVisible(6000)] + !Skin.HasSetting(showcasezoom)"></focusedlayout>
        <itemlayout height="600" width="200" condition="![[[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]] + !Control.IsVisible(6000)] + Skin.HasSetting(showcasezoom)"></itemlayout>
        <focusedlayout height="525" width="858" condition="![[[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]] + !Control.IsVisible(6000)] + Skin.HasSetting(showcasezoom)"></focusedlayout>
    </include>
    <include name="scmfixed">
        <control type="fixedlist" id="501">
            <include>contents501list</include>
        </control>
    </include>
    <include name="scmwrap">
        <control type="wraplist" id="501">
            <include>contents501list</include>
        </control>
    </include>
    <include name="Showcase">
        <control type="group">
            <visible>Control.IsVisible(501)</visible>
            <animation effect="zoom" start="100" end="200" time="800" easing="inout" tween="circle" center="960,960" condition="Skin.HasSetting(showcasezoom)">Conditional</animation>
            <animation effect="slide" tween="cubic" time="900" start="0,806" end="0,0">VisibleChange</animation>
            <control type="group">
                <camera x="960" y="810" />
                <control type="group" id="6001">
                    <posx>55</posx>
                    <posy>570</posy>
                    <visible>Container.OnNext + ![[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]]</visible>
                    <animation effect="slide" end="-135,0" time="250" reversible="false">Hidden</animation>
                    <control type="group">
                        <posx>15</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-7).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <visible>Container.OnNext</visible>
                        <animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
                        <animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem-7</include>
                    </control>
                    <control type="group">
                        <posx>150</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-6).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem-6</include>
                    </control>
                    <control type="group">
                        <posx>285</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-5).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem-5</include>
                    </control>
                    <control type="group">
                        <posx>420</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-4).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem-4</include>
                    </control>
                    <control type="group">
                        <posx>555</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-3).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem-3</include>
                    </control>
                    <control type="group">
                        <posx>690</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-2).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem-2</include>
                    </control>
                    <control type="group">
                        <posx>1635</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(6).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <visible>!Container.OnNext</visible>
                        <animation effect="fade" end="100" delay="0" time="250" reversible="false">Visible</animation>
                        <animation effect="rotatey" center="2205" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem6</include>
                    </control>
                    <control type="group">
                        <posx>1500</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(5).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="2070" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem5</include>
                    </control>
                    <control type="group">
                        <posx>1365</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(4).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="1935" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem4</include>
                    </control>
                    <control type="group">
                        <posx>1230</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(3).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="1800" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem3</include>
                    </control>
                    <control type="group">
                        <posx>1095</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(2).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="1665" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem2</include>
                    </control>
                    <control type="group">
                        <posx>960</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(1).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="1530" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem1</include>
                    </control>
                    <control type="group">
                        <visible>Container.OnNext</visible>
                        <animation effect="slide" end="75,0" time="250" reversible="false">Hidden</animation>
                        <control type="group">
                            <posx>825</posx>
                            <visible>Container.OnNext</visible>
                            <visible>!IsEmpty(Container(501).ListItemNoWrap(0).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                            <animation effect="rotatey" center="1395" end="-55" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
                            <animation effect="rotatey" center="1395" start="55" end="55" time="0" condition="true">Conditional</animation>
                            <include>MovieShowCaseItem0</include>
                        </control>
                        <control type="group">
                            <posx>758</posx>
                            <visible>!IsEmpty(Container(501).ListItemNoWrap(-1).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                            <visible>Container.OnNext</visible>
                            <animation effect="rotatey" center="608" end="-55" time="250" reversible="false" tween="quadratic">Hidden</animation>
                            <include>MovieShowCaseItem-1</include>
                        </control>
                    </control>
                </control>
                <control type="group" id="6002">
                    <posx>55</posx>
                    <posy>570</posy>
                    <visible>Container.OnPrevious + ![[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]]</visible>
                    <animation effect="slide" end="135,0" time="250" reversible="false">Hidden</animation>
                    <control type="group">
                        <posx>1500</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(7).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <visible>Container.OnPrevious</visible>
                        <animation effect="fade" start="100" end="0" time="250" reversible="false">Hidden</animation>
                        <animation effect="rotatey" center="2070" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem7</include>
                    </control>
                    <control type="group">
                        <posx>1365</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(6).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="1935" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem6</include>
                    </control>
                    <control type="group">
                        <posx>1230</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(5).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="1800" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem5</include>
                    </control>
                    <control type="group">
                        <posx>1095</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(4).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="1665" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem4</include>
                    </control>
                    <control type="group">
                        <posx>960</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(3).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="1530" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem3</include>
                    </control>
                    <control type="group">
                        <posx>825</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(2).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="1395" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem2</include>
                    </control>
                    <control type="group">
                        <posx>-120</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-6).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <visible>!Container.OnPrevious</visible>
                        <animation effect="fade" end="100" time="250" reversible="false">Visible</animation>
                        <animation effect="rotatey" center="-270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem-6</include>
                    </control>
                    <control type="group">
                        <posx>15</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-5).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem-5</include>
                    </control>
                    <control type="group">
                        <posx>150</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-4).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem-4</include>
                    </control>
                    <control type="group">
                        <posx>285</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-3).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem-3</include>
                    </control>
                    <control type="group">
                        <posx>420</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-2).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem-2</include>
                    </control>
                    <control type="group">
                        <posx>555</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-1).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <include>MovieShowCaseItem-1</include>
                    </control>
                    <control type="group">
                        <visible>Container.OnPrevious</visible>
                        <animation effect="slide" end="-75,0" time="250" reversible="false">Hidden</animation>
                        <control type="group">
                            <posx>690</posx>
                            <visible>Container.OnPrevious</visible>
                            <visible>!IsEmpty(Container(501).ListItemNoWrap(0).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                            <animation effect="rotatey" center="540" end="55" time="250" reversible="false" tween="quadratic" easing="in">Hidden</animation>
                            <animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                            <include>MovieShowCaseItem0</include>
                        </control>
                        <control type="group">
                            <posx>758</posx>
                            <visible>!IsEmpty(Container(501).ListItemNoWrap(1).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                            <visible>Container.OnPrevious</visible>
                            <animation effect="rotatey" center="1328" end="55" time="250" reversible="false" tween="quadratic">Hidden</animation>
                            <include>MovieShowCaseItem1</include>
                        </control>
                    </control>
                </control>
                <control type="button" id="960">
                    <texturefocus>-</texturefocus>
                    <texturenofocus>-</texturenofocus>
                    <visible>![[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]]</visible>
                    <animation effect="fade" start="100" end="0" time="800">Hidden</animation>
                </control>
                <!-- MikeBZH44 start : hidden button to trap UP or DOWN arrow to open/close case -->
                <control type="button" id="961">
                    <onup>50</onup>
                    <ondown condition="Control.IsVisible(61)">61</ondown>
                    <ondown condition="!Control.IsVisible(61)">109</ondown>
                    <texturefocus>-</texturefocus>
                    <texturenofocus>-</texturenofocus>
                    <animation effect="fade" start="100" end="0" time="800">Hidden</animation>
                </control>
                <!-- MikeBZH44 end -->
                <control type="group" id="6000">
                    <posx>55</posx>
                    <posy>570</posy>
                    <animation type="WindowOpen" reversible="false">
                        <effect type="zoom" start="150" end="100" center="960,540" time="300" tween="cubic" />
                        <effect type="fade" end="100" time="300" />
                    </animation>
                    <animation type="WindowClose" reversible="false">
                        <effect type="zoom" start="100" end="130" center="960,540" time="300" tween="cubic" easing="in" />
                        <effect type="fade" start="100" end="0" time="300" delay="0" />
                    </animation>
                    <visible>!Control.IsVisible(6001) + !Control.IsVisible(6002) + Control.IsVisible(960)</visible>
                    <control type="group">
                        <posx>15</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-6).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="slide" time="300" end="818" tween="cubic" easing="in">WindowClose</animation>
                        <animation effect="slide" time="1100" delay="0" end="0" start="818" tween="cubic">WindowOpen</animation>
                        <animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <animation type="Conditional" condition="[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]">
                            <effect type="rotatey" center="-135" end="55" time="800" tween="cubic" easing="inout" />
                            <effect type="slide" end="-1028" time="800" tween="cubic" easing="inout" />
                        </animation>
                        <include>MovieShowCaseItem-6</include>
                    </control>
                    <control type="group">
                        <posx>150</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-5).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="slide" time="300" end="682" tween="cubic" easing="in">WindowClose</animation>
                        <animation effect="slide" time="1100" delay="0" end="0" start="682" tween="cubic">WindowOpen</animation>
                        <animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <animation type="Conditional" condition="[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]">
                            <effect type="rotatey" center="0" end="55" time="800" tween="cubic" easing="inout" />
                            <effect type="slide" end="-866" time="800" tween="cubic" easing="inout" />
                        </animation>
                        <include>MovieShowCaseItem-5</include>
                    </control>
                    <control type="group">
                        <posx>285</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-4).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="slide" time="300" end="548" tween="cubic" easing="in">WindowClose</animation>
                        <animation effect="slide" time="1100" delay="0" end="0" start="548" tween="cubic">WindowOpen</animation>
                        <animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <animation type="Conditional" condition="[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]">
                            <effect type="rotatey" center="135" end="55" time="800" tween="cubic" easing="inout" />
                            <effect type="slide" end="-704" time="800" tween="cubic" easing="inout" />
                        </animation>
                        <include>MovieShowCaseItem-4</include>
                    </control>
                    <control type="group">
                        <posx>420</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-3).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="slide" time="300" end="412" tween="cubic" easing="in">WindowClose</animation>
                        <animation effect="slide" time="1100" delay="0" end="0" start="412" tween="cubic">WindowOpen</animation>
                        <animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <animation type="Conditional" condition="[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]">
                            <effect type="rotatey" center="270" end="55" time="800" tween="cubic" easing="inout" />
                            <effect type="slide" end="-543" time="800" tween="cubic" easing="inout" />
                        </animation>
                        <include>MovieShowCaseItem-3</include>
                    </control>
                    <control type="group">
                        <posx>555</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-2).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="slide" time="300" end="278" tween="cubic" easing="in">WindowClose</animation>
                        <animation effect="slide" time="1100" delay="0" end="0" start="278" tween="cubic">WindowOpen</animation>
                        <animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <animation type="Conditional" condition="[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]">
                            <effect type="rotatey" center="405" end="55" time="800" tween="cubic" easing="inout" />
                            <effect type="slide" end="-384" time="800" tween="cubic" easing="inout" />
                        </animation>
                        <include>MovieShowCaseItem-2</include>
                    </control>
                    <control type="group">
                        <posx>690</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(-1).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="slide" time="300" end="142" tween="cubic" easing="in">WindowClose</animation>
                        <animation effect="slide" time="1100" delay="0" end="0" start="142" tween="cubic">WindowOpen</animation>
                        <animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
                        <animation type="Conditional" condition="[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]">
                            <effect type="rotatey" center="540" end="55" time="800" tween="cubic" easing="inout" />
                            <effect type="slide" end="-226" time="800" tween="cubic" easing="inout" />
                        </animation>
                        <include>MovieShowCaseItem-1</include>
                    </control>
                    <control type="group">
                        <posx>1500</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(6).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="slide" time="300" end="-818" tween="cubic" easing="in">WindowClose</animation>
                        <animation effect="slide" time="1100" delay="0" end="0" start="-818" tween="cubic">WindowOpen</animation>
                        <animation effect="rotatey" center="2070" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <animation type="Conditional" condition="[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]">
                            <effect type="rotatey" center="2070" end="-55" time="800" tween="cubic" easing="inout" />
                            <effect type="slide" end="1028" time="800" tween="cubic" easing="inout" />
                        </animation>
                        <include>MovieShowCaseItem6</include>
                    </control>
                    <control type="group">
                        <posx>1365</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(5).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="slide" time="300" end="-682" tween="cubic" easing="in">WindowClose</animation>
                        <animation effect="slide" time="1100" delay="0" end="0" start="-682" tween="cubic">WindowOpen</animation>
                        <animation effect="rotatey" center="1935" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <animation type="Conditional" condition="[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]">
                            <effect type="rotatey" center="1935" end="-55" time="800" tween="cubic" easing="inout" />
                            <effect type="slide" end="866" time="800" tween="cubic" easing="inout" />
                        </animation>
                        <include>MovieShowCaseItem5</include>
                    </control>
                    <control type="group">
                        <posx>1230</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(4).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="slide" time="300" end="-548" tween="cubic" easing="in">WindowClose</animation>
                        <animation effect="slide" time="1100" delay="0" end="0" start="-548" tween="cubic">WindowOpen</animation>
                        <animation effect="rotatey" center="1800" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <animation type="Conditional" condition="[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]">
                            <effect type="rotatey" center="1800" end="-55" time="800" tween="cubic" easing="inout" />
                            <effect type="slide" end="704" time="800" tween="cubic" easing="inout" />
                        </animation>
                        <include>MovieShowCaseItem4</include>
                    </control>
                    <control type="group">
                        <posx>1095</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(3).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="slide" time="300" end="-412" tween="cubic" easing="in">WindowClose</animation>
                        <animation effect="slide" time="1100" delay="0" end="0" start="-412" tween="cubic">WindowOpen</animation>
                        <animation effect="rotatey" center="1665" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <animation type="Conditional" condition="[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]">
                            <effect type="rotatey" center="1665" end="-55" time="800" tween="cubic" easing="inout" />
                            <effect type="slide" end="543" time="800" tween="cubic" easing="inout" />
                        </animation>
                        <include>MovieShowCaseItem3</include>
                    </control>
                    <control type="group">
                        <posx>960</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(2).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="slide" time="300" end="-278" tween="cubic" easing="in">WindowClose</animation>
                        <animation effect="slide" time="1100" delay="0" end="0" start="-278" tween="cubic">WindowOpen</animation>
                        <animation effect="rotatey" center="1530" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <animation type="Conditional" condition="[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]">
                            <effect type="rotatey" center="1530" end="-55" time="800" tween="cubic" easing="inout" />
                            <effect type="slide" end="384" time="800" tween="cubic" easing="inout" />
                        </animation>
                        <include>MovieShowCaseItem2</include>
                    </control>
                    <control type="group">
                        <posx>825</posx>
                        <visible>!IsEmpty(Container(501).ListItemNoWrap(1).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                        <animation effect="slide" time="300" end="-142" tween="cubic" easing="in">WindowClose</animation>
                        <animation effect="slide" time="1100" delay="0" end="0" start="-142" tween="cubic">WindowOpen</animation>
                        <animation effect="rotatey" center="1395" start="55" end="55" time="0" condition="true">Conditional</animation>
                        <animation type="Conditional" condition="[Skin.HasSetting(noflow) + ![Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]] | [Skin.HasSetting(noflowtv) + [Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]]">
                            <effect type="rotatey" center="1395" end="-55" time="800" tween="cubic" easing="inout" />
                            <effect type="slide" end="226" time="800" tween="cubic" easing="inout" />
                        </animation>
                        <include>MovieShowCaseItem1</include>
                    </control>
                    <control type="group">
                        <posx>758</posx>
                        <control type="group">
                            <visible>!IsEmpty(Container(501).ListItemNoWrap(0).FolderPath) | Skin.HasSetting(showcasewrap)</visible>
                            <include>MovieShowCaseGlow</include>
                            <!-- MikeBZH44 start : Display background case -->
                            <!-- Case background -->
                            <control type="image">
                                <include>MovieShowcaseDVDCoverVars</include>
                                <texture background="true" fallback="thumbs/boxes/default_case.png">thumbs/boxes/$VAR[ShowcaseCasePathVar]/back_$VAR[ShowcaseCase0Var]</texture>
                                <visible>Skin.HasSetting(usecases) + Container.Content(movies) + ![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)]</visible>
                            </control>
                            <!-- MikeBZH44 end -->
                            <!-- MikeBZH44 start : Display Movie disc / Bluray disc / DVD disc / Default disc -->
                            <control type="image">
                                <include>MovieShowcaseCDArtClear</include>
                                <texture background="true" fallback="common/cdart/bd_logo.png">$INFO[ListItem.Art(discart)]</texture>
                                <visible>Skin.HasSetting(usecases) + Container.Content(movies) + ![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)] + [stringcompare(ListItem.VideoResolution,3d) | stringcompare(ListItem.VideoResolution,720) | stringcompare(ListItem.VideoResolution,1080)]</visible>
                            </control>
                            <control type="image">
                                <include>MovieShowcaseCDArtClear</include>
                                <texture background="true" fallback="common/cdart/dvd_logo.png">$INFO[ListItem.Art(discart)]</texture>
                                <visible>Skin.HasSetting(usecases) + Container.Content(movies) + ![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)] + [stringcompare(ListItem.VideoResolution,480) | stringcompare(ListItem.VideoResolution,540) | stringcompare(ListItem.VideoResolution,576)]</visible>
                            </control>
                            <control type="image">
                                <include>MovieShowcaseCDArtClear</include>
                                <texture background="true">common/cdart/default.png</texture>
                                <visible>Skin.HasSetting(usecases) + Container.Content(movies) + ![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)] + ![stringcompare(ListItem.VideoResolution,3d) | stringcompare(ListItem.VideoResolution,480) | stringcompare(ListItem.VideoResolution,540) | stringcompare(ListItem.VideoResolution,576) | stringcompare(ListItem.VideoResolution,720) | stringcompare(ListItem.VideoResolution,1080)]</visible>
                            </control>
                            <!-- MikeBZH44 end -->
                            <!-- Movie thumbnail -->
                            <control type="image">
                                <include>MovieShowcaseThumb</include>
                                <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem0Var]</texture>
                                <!-- MikeBZH44 start : Open case + No case for movieset -->
                                <include>ShowcaseOpenCaseCoverflow</include>
                                <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
                                <!-- MikeBZH44 end -->
                            </control>
                            <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
                            <control type="image">
                                <include>MovieShowcaseDVDCoverVars</include>
                                <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem0Var]</texture>
                                <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)]</visible>
                            </control>
                            <!-- MikeBZH44 end -->
                            <!-- Movie Showcase Variables: Thumb glass overlays -->
                            <control type="image">
                                <include>MovieShowcaseThumbDimensions</include>
                                <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
                                <include>ShowcaseOpenCaseCoverflow</include>
                                <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)]</visible>
                            </control>
                            <!-- Front case -->
                            <control type="image">
                                <include>MovieShowcaseDVDCoverVars</include>
                                <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase0Var]</texture>
                                <!-- MikeBZH44 start : Open case + No case for movieset -->
                                <include>ShowcaseOpenCaseCoverflow</include>
                                <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)]</visible>
                                <!-- MikeBZH44 end -->
                            </control>
                            <!-- Movie thumbnail reflection -->
                            <control type="image">
                                <include>MovieShowcaseThumbReflectionMain</include>
                                <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem0Var]</texture>
                                <!-- MikeBZH44 start : Open case + No case for movieset -->
                                <include>ShowcaseOpenCaseCoverflow</include>
                                <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)]</visible>
                                <!-- MikeBZH44 end -->
                            </control>
                            <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
                            <control type="image">
                                <include>MovieShowcaseThumbReflectionMovieset</include>
                                <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem0Var]</texture>
                                <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)]</visible>
                            </control>
                            <!-- MikeBZH44 end -->
                            <control type="image">
                                <include>MovieShowcaseThumbReflectionDVD</include>
                                <!-- MikeBZH44 start : Open case + No case for movieset -->
                                <include>ShowcaseOpenCaseCoverflow</include>
                                <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)]</visible>
                                <!-- MikeBZH44 end -->
                            </control>
                            <control type="image">
                                <include>WatchedOverlayShowCase</include>
                                <include>OverlayVisibility0</include>
                                <!-- MikeBZH44 start : Open case + No case for movieset -->
                                <include>ShowcaseOpenCaseCoverflowWatched</include>
                                <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem.Path,videodb://1/7/)]</visible>
                                <!-- MikeBZH44 end -->
                            </control>
                        </control>
                    </control>
                </control>
            </control>
            <include condition="!Skin.HasSetting(showcasewrap)">scmfixed</include>
            <include condition="Skin.HasSetting(showcasewrap)">scmwrap</include>
        </control>
    </include>
    <include name="MovieShowcaseThumbReflectionDVD">
        <posx>-27</posx>
        <posy>397</posy>
        <width>325</width>
        <height>180</height>
        <colordiffuse>d1FFFFFF</colordiffuse>
        <fadetime>0</fadetime>
        <texture background="true">thumbs/boxes/poster_glass_reflect.png</texture>
        <aspectratio scalediffuse="false">scale</aspectratio>
        <animation effect="fade" start="70" end="70" time="0" condition="true">Conditional</animation>
        <visible>Skin.HasSetting(usecases) + Skin.HasSetting(clearcases) + Container.Content(movies)</visible>
    </include>
    <include name="MovieShowcaseDVDCoverVars">
        <visible>Skin.HasSetting(usecases) + Container.Content(movies)</visible>
        <posx>-28</posx>
        <posy>-22</posy>
        <width>324</width>
        <height>434</height>
        <fadetime>0</fadetime>
    </include>
    <!-- Movie Showcase Variables: Main thumbs -->
    <include name="MovieShowcaseThumbDimensions">
        <posx>17</posx>
        <posy>10</posy>
        <width>262</width>
        <height>384</height>
    </include>
    <include name="MovieShowcaseThumbReflectionDimensions">
        <posx>19</posx>
        <posy>397</posy>
        <width>262</width>
        <height>304</height>
        <animation effect="slide" start="0,00" end="0,2" time="0" condition="Skin.HasSetting(usecases) + Container.Content(movies)">Conditional</animation>
        <animation effect="slide" start="0,00" end="0,7" time="0" condition="Skin.HasSetting(usecases) + !Skin.HasSetting(clearcases) + Container.Content(movies)">Conditional</animation>
    </include>
    <include name="MovieShowCaseGlow">
        <control type="image">
            <posx>-12</posx>
            <posy>-25</posy>
            <width>320</width>
            <height>454</height>
            <align>center</align>
            <bordersize>18</bordersize>
            <include>Animation_VisibleChange400</include>
            <include>PanelGlowFade</include>
            <visible>![Skin.HasSetting(usecases) + Container.Content(movies)]</visible>
            <visible>Skin.HasSetting(ExtendedGlowMode) + !Skin.HasSetting(DisableGlowbar)</visible>
            <colordiffuse>$VAR[ColorDiffuseVar]</colordiffuse>
            <texture background="true">thumbs/thumb_glass_shadow.png</texture>
        </control>
    </include>
    <include name="MovieShowcaseThumb">
        <posx>-1</posx>
        <posy>-8</posy>
        <width>298</width>
        <height>420</height>
        <align>center</align>
        <bordertexture border="18">thumbs/poster_shadow.png</bordertexture>
        <fadetime>0</fadetime>
        <bordersize>18</bordersize>
        <aspectratio scalediffuse="false">scale</aspectratio>
    </include>
    <include name="MovieShowcaseThumbReflectionMain">
        <include>MovieShowcaseThumbReflectionDimensions</include>
        <fadetime>0</fadetime>
        <colordiffuse>52FFFFFF</colordiffuse>
        <aspectratio scalediffuse="false">scale</aspectratio>
    </include>
    <include name="MovieShowcaseThumbReflection">
        <include>MovieShowcaseThumbReflectionDimensions</include>
        <fadetime>0</fadetime>
        <colordiffuse>d1FFFFFF</colordiffuse>
        <aspectratio scalediffuse="false">scale</aspectratio>
        <animation effect="fade" start="70" end="70" time="0" condition="true">Conditional</animation>
    </include>
    <include name="MovieShowcaseThumbReflectionMovieset">
        <posx>-27</posx>
        <posy>397</posy>
        <width>325</width>
        <height>180</height>
        <colordiffuse>d1FFFFFF</colordiffuse>
        <fadetime>0</fadetime>
        <animation effect="fade" start="70" end="70" time="0" condition="true">Conditional</animation>
    </include>
    <include name="WatchedOverlayShowCase">
        <posx>188</posx>
        <posy>10</posy>
        <width>90</width>
        <height>90</height>
        <fadetime>0</fadetime>
        <animation effect="slide" start="0,0" end="6,-3" time="300" condition="Skin.HasSetting(usecases) + Container.Content(movies)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,-29" time="300" condition="Container.Content(movies) + Skin.HasSetting(usecases) + !Skin.HasSetting(clearcases)">Conditional</animation>
    </include>
    <!-- Movie Showcase Variables: Thumb glass overlays -->
    <include name="MovieShowcaseGlassOverlay">
        <control type="image">
            <include>MovieShowcaseThumbDimensions</include>
            <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
            <visible>![Skin.HasSetting(usecases) + Container.Content(movies)]</visible>
        </control>
    </include>
    <!-- Movie Showcase Items-->
    <include name="MovieShowCaseItem-7">
        <include>MovieShowCaseGlow</include>
        <control type="image">
            <include>MovieShowcaseThumb</include>
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-7Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-7Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <!-- Movie Showcase Variables: Thumb glass overlays -->
        <control type="image">
            <include>MovieShowcaseThumbDimensions</include>
            <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase-7Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-7Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionMovieset</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-7Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionDVD</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <include>OverlayVisibility-7</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-7).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
    </include>
    <include name="MovieShowCaseItem-6">
        <include>MovieShowCaseGlow</include>
        <control type="image">
            <include>MovieShowcaseThumb</include>
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-6Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-6Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <!-- Movie Showcase Variables: Thumb glass overlays -->
        <control type="image">
            <include>MovieShowcaseThumbDimensions</include>
            <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase-6Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-6Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionMovieset</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-6Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionDVD</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <include>OverlayVisibility-6</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-6).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
    </include>
    <include name="MovieShowCaseItem-5">
        <include>MovieShowCaseGlow</include>
        <control type="image">
            <include>MovieShowcaseThumb</include>
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-5Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-5Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <!-- Movie Showcase Variables: Thumb glass overlays -->
        <control type="image">
            <include>MovieShowcaseThumbDimensions</include>
            <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase-5Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-5Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionMovieset</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem5Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionDVD</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <include>OverlayVisibility-5</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-5).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
    </include>
    <include name="MovieShowCaseItem-4">
        <include>MovieShowCaseGlow</include>
        <control type="image">
            <include>MovieShowcaseThumb</include>
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-4Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-4Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <!-- Movie Showcase Variables: Thumb glass overlays -->
        <control type="image">
            <include>MovieShowcaseThumbDimensions</include>
            <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase-4Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-4Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionMovieset</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-4Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionDVD</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <include>OverlayVisibility-4</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-4).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
    </include>
    <include name="MovieShowCaseItem-3">
        <include>MovieShowCaseGlow</include>
        <control type="image">
            <include>MovieShowcaseThumb</include>
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-3Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-3Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <!-- Movie Showcase Variables: Thumb glass overlays -->
        <control type="image">
            <include>MovieShowcaseThumbDimensions</include>
            <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase-3Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-3Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionMovieset</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-3Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionDVD</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <include>OverlayVisibility-3</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-3).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
    </include>
    <include name="MovieShowCaseItem-2">
        <include>MovieShowCaseGlow</include>
        <control type="image">
            <include>MovieShowcaseThumb</include>
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-2Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-2Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <!-- Movie Showcase Variables: Thumb glass overlays -->
        <control type="image">
            <include>MovieShowcaseThumbDimensions</include>
            <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase-2Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-2Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionMovieset</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-2Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionDVD</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <include>OverlayVisibility-2</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-2).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
    </include>
    <include name="MovieShowCaseItem-1">
        <include>MovieShowCaseGlow</include>
        <control type="image">
            <include>MovieShowcaseThumb</include>
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-1Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-1Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <!-- Movie Showcase Variables: Thumb glass overlays -->
        <control type="image">
            <include>MovieShowcaseThumbDimensions</include>
            <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase-1Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-1Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionMovieset</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem-1Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionDVD</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <include>OverlayVisibility-1</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(-1).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
    </include>
    <include name="MovieShowCaseItem0">
        <include>MovieShowCaseGlow</include>
        <control type="image">
            <include>MovieShowcaseThumb</include>
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem0Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem0Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <!-- Movie Showcase Variables: Thumb glass overlays -->
        <control type="image">
            <include>MovieShowcaseThumbDimensions</include>
            <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase0Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem0Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionMovieset</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem0Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionDVD</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <include>OverlayVisibility0</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(0).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
    </include>
    <include name="MovieShowCaseItem1">
        <include>MovieShowCaseGlow</include>
        <control type="image">
            <include>MovieShowcaseThumb</include>
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem1Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem1Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <!-- Movie Showcase Variables: Thumb glass overlays -->
        <control type="image">
            <include>MovieShowcaseThumbDimensions</include>
            <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase1Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem1Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionMovieset</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem1Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionDVD</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <include>OverlayVisibility1</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(1).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
    </include>
    <include name="MovieShowCaseItem2">
        <include>MovieShowCaseGlow</include>
        <control type="image">
            <include>MovieShowcaseThumb</include>
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem2Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem2Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <!-- Movie Showcase Variables: Thumb glass overlays -->
        <control type="image">
            <include>MovieShowcaseThumbDimensions</include>
            <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase2Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem2Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionMovieset</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem2Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionDVD</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <include>OverlayVisibility2</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(2).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
    </include>
    <include name="MovieShowCaseItem3">
        <include>MovieShowCaseGlow</include>
        <control type="image">
            <include>MovieShowcaseThumb</include>
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem3Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem3Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <!-- Movie Showcase Variables: Thumb glass overlays -->
        <control type="image">
            <include>MovieShowcaseThumbDimensions</include>
            <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase3Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem3Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionMovieset</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem3Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionDVD</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <include>OverlayVisibility3</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(3).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
    </include>
    <include name="MovieShowCaseItem4">
        <include>MovieShowCaseGlow</include>
        <control type="image">
            <include>MovieShowcaseThumb</include>
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem4Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem4Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <!-- Movie Showcase Variables: Thumb glass overlays -->
        <control type="image">
            <include>MovieShowcaseThumbDimensions</include>
            <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase4Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem4Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionMovieset</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem4Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionDVD</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <include>OverlayVisibility4</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(4).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
    </include>
    <include name="MovieShowCaseItem5">
        <include>MovieShowCaseGlow</include>
        <control type="image">
            <include>MovieShowcaseThumb</include>
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem5Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem5Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <!-- Movie Showcase Variables: Thumb glass overlays -->
        <control type="image">
            <include>MovieShowcaseThumbDimensions</include>
            <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase5Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem5Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionMovieset</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem5Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionDVD</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <include>OverlayVisibility5</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(5).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
    </include>
    <include name="MovieShowCaseItem6">
        <include>MovieShowCaseGlow</include>
        <control type="image">
            <include>MovieShowcaseThumb</include>
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem6Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem6Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <!-- Movie Showcase Variables: Thumb glass overlays -->
        <control type="image">
            <include>MovieShowcaseThumbDimensions</include>
            <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase6Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem6Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionMovieset</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem6Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionDVD</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <include>OverlayVisibility6</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(6).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
    </include>
    <include name="MovieShowCaseItem7">
        <include>MovieShowCaseGlow</include>
        <control type="image">
            <include>MovieShowcaseThumb</include>
            <texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem7Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://1/7/)] | [!Skin.HasSetting(usecases)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem7Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <!-- Movie Showcase Variables: Thumb glass overlays -->
        <control type="image">
            <include>MovieShowcaseThumbDimensions</include>
            <texture diffuse="thumbs/thumb_mask.png">thumbs/thumb_glass.png</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseDVDCoverVars</include>
            <texture background="true">thumbs/boxes/$VAR[ShowcaseCasePathVar]/$VAR[ShowcaseCase7Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>MovieShowcaseThumbReflection</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem7Var]</texture>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <!-- MikeBZH44 start : If no case for movieset then larger thumbnail -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionMovieset</include>
            <texture background="true" flipy="true" diffuse="thumbs/movieposter_mask_reflect.png" fallback="DefaultVideoBigPoster.png">$VAR[ShowcaseItem7Var]</texture>
            <visible>[Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://1/7/)]</visible>
        </control>
        <!-- MikeBZH44 end -->
        <control type="image">
            <include>MovieShowcaseThumbReflectionDVD</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
        <control type="image">
            <include>WatchedOverlayShowCase</include>
            <include>OverlayVisibility7</include>
            <!-- MikeBZH44 start : No case for movieset -->
            <visible>![Skin.HasSetting(NoCaseForMovieset) + SubString(ListItem(7).Path,videodb://1/7/)]</visible>
            <!-- MikeBZH44 end -->
        </control>
    </include>
    <!-- MikeBZH44 Start -->
    <!-- Discart Spinning animation -->
    <include name="MovieShowcaseCDArtSpinDown">
        <animation effect="rotate" end="-360" center="auto" time="5000" loop="false" reversible="false" condition="Control.HasFocus(961) + !Skin.HasSetting(DVDAutoOpenCase)">Conditional</animation>
    </include>
    <include name="MovieShowcaseCDArtSpinInfoPanel">
        <animation type="conditional" reversible="false" condition="Control.IsVisible(7550) + Skin.HasSetting(DVDAutoOpenCase) + [Stringcompare(Control.GetLabel(4421),infopanelonmanual) | Stringcompare(Control.GetLabel(4421),infopanelonauto)  | IsEmpty(Control.GetLabel(4421))]">
            <effect type="rotate" end="-360" center="auto" time="5000" loop="false"/>
        </animation>
    </include>
    <include name="MovieShowcaseCDArtSpinFocus">
        <animation type="focus" reversible="false" condition="Skin.HasSetting(DVDAutoOpenCase) + Stringcompare(Control.GetLabel(4421),infopanelon)">
            <effect type="rotate" end="-360" center="auto" time="5000" loop="false"/>
        </animation>
    </include>
    <include name="MovieShowcaseCDArtSpin">
        <!-- Case open automatically and infopanel set to DELAY or MANUAL-->
        <include>MovieShowcaseCDArtSpinInfoPanel</include>
        <!-- Case open automatically and infopanel set to ON -->
        <include>MovieShowcaseCDArtSpinFocus</include>
        <!-- Case open manually -->
        <include>MovieShowcaseCDArtSpinDown</include>
    </include>
    <!-- Position and dimension for discart -->
    <include name="MovieShowcaseCDArtClear">
        <posx>26</posx>
        <posy>70</posy>
        <width>240</width>
        <height>240</height>
        <include>MovieShowcaseCDArtSpin</include>
    </include>
    <!-- Open case when coverflow is ON -->
    <include name="ShowcaseOpenCaseCoverflow">
        <animation type="conditional" reversible="false" condition="Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(DVDAutoOpenCase)  + [Control.IsVisible(7550) | Control.IsVisible(197) | Control.IsVisible(198)]">
            <effect type="rotatey" center="-10" start="0" end="75" time="1000" tween="quadratic" easing="out"/>
            <effect type="rotatey" delay="8000" center="-10" start="0" end="-75" time="1000" tween="quadratic" easing="out"/>
        </animation>
        <animation type="conditional" reversible="true" condition="Skin.HasSetting(usecases) + Container.Content(movies) + !Skin.HasSetting(DVDAutoOpenCase) + Control.HasFocus(961)">
            <effect type="rotatey" center="0" start="0" end="75" time="1000" tween="quadratic" easing="out"/>
        </animation>
    </include>
    <include name="ShowcaseOpenCaseCoverflowWatched">
        <animation type="conditional" reversible="false" condition="Skin.HasSetting(usecases) + Container.Content(movies) + Skin.HasSetting(DVDAutoOpenCase)  + [Control.IsVisible(7550) | Control.IsVisible(197) | Control.IsVisible(198)]">
            <effect type="rotatey" center="-15" start="0" end="75" time="1000" tween="quadratic" easing="out"/>
            <effect type="rotatey" delay="8000" center="-15" start="0" end="-75" time="1000" tween="quadratic" easing="out"/>
        </animation>
        <animation type="conditional" reversible="true" condition="Skin.HasSetting(usecases) + Container.Content(movies) + !Skin.HasSetting(DVDAutoOpenCase) + Control.HasFocus(961)">
            <effect type="rotatey" center="0" start="0" end="75" time="1000" tween="quadratic" easing="out"/>
        </animation>
    </include>
    <!-- MikeBZH44 End -->
</includes>